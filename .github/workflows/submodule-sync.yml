name: 'Submodules Sync & DockerImage'

on:
  schedule:
  - cron: "1 0 * * *"
  # Allows you to run this workflow manually from the Actions tab or through HTTP API
  workflow_dispatch:

jobs:
  Sync:
    name: 'Submodules Sync'
    runs-on: ubuntu-latest
    
    outputs:
      updated_submodule: ${{ steps.commit.outputs.updated_submodule }}
      
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        submodules: false  # 不自动检出子模块

    - name: Checkout submodules
      run: |
        git submodule update --init --recursive
        
    - name: Get latest tag of submodules
      run: |
        git submodule foreach "(git fetch --tags; git tag -l --sort=v:refname | tail -n1 | xargs git checkout)"

    - name: Commit update
      id: commit
      run: |
        git config --global user.name 'Git bot'
        git config --global user.email 'bot@noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git commit -am "Auto updated submodule references" && git push && echo "updated_submodule=true" >> $GITHUB_OUTPUT || echo "No changes to commit"

  Deploy:
    needs: [Sync]
    name: 'Deploy DockerImage'
    if: needs.Sync.outputs.updated_submodule == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: modify
        run: |
          cd tailscale
          sed -i '/hi.ServerName != m.hostname/,+2d' cmd/derper/cert.go

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Check version
        run: |
          echo "VERSION=$(cat tailscale/VERSION.txt)" >> $GITHUB_ENV
          
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: latest=auto
          tags: type=semver,pattern=v{{version}},value=${{ env.VERSION }}
          
      - name: Build and push Docker images to ghcr.io
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
